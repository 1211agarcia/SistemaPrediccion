{% extends 'base.html.twig' %}
{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" href="{{asset('bundles/app/plugins/dagre-d3/dagre-d3.css')}}">
{% endblock %}
{% block body %}

  <section class="content-header">
      <h1>
        Dashboard
        <small>Control panel</small>
      </h1>
  </section>

    <!-- Main content -->
    <section class="content col-md-3">
      <!-- Small boxes (Stat box) -->
      <div class="row">
        <!-- ./col -->
        <div class="col-xs-12">
          <!-- small box -->
          <div class="small-box bg-yellow">
            <div class="inner">
              <h3>{{ contenido['estudiantes'] }}</h3>

              <p>Mi Perfil</p>
            </div>
            <div class="icon">
              <i class="ion ion-person"></i>
            </div>
            <a href="{% if is_granted('ROLE_ESTUDIANTE') %}
              {{ path('estudiante_show', { 'id': contenido['estudiante_id'] }) }}
            {% else %}
              {{ path('estudiante_index')}}
            {% endif %}" class="small-box-footer">Ir <i class="fa fa-arrow-circle-right"></i></a>
          </div>
        </div>
        <!-- ./col -->
        <div class="col-xs-12">
          <!-- small box -->
          <div class="small-box bg-green">
            <div class="inner">
              <h3>Progreso total<sup style="font-size: 20px">%</sup></h3>

              <p>Progreso</p>
            </div>
            <div class="icon">
              <i class="ion ion-stats-bars"></i>
            </div>
          </div>
        </div>        
        <!-- ./col -->
        <div class="col-xs-12">
          <!-- small box -->
          <div class="small-box bg-red">
            <div class="inner">
              <h3>{{ contenido['practicas'] }}</h3>

              <p>Practicas Realizadas</p>
            </div>
            <div class="icon">
              <i class="ion ion-ribbon-a"></i>
            </div>
          </div>
        </div>
        <!-- ./col -->
          <div class="col-xs-12" style="text-align: center;">
            <a href="{{ path('practica_generate')}}" class="btn btn-app"><i style="color: green;"class="fa fa-play"></i> Practicar</a>
          </div>
      </div>
    </section>
    <section class="content col-lg-8 col-md-8">
      <div class="box box-primary">
            <div class="box-body" style="overflow:auto;">
                <svg id="svg-canvas" width="960" height="600"></svg>
            </div>
        </div>
    </section>

    {% endblock %}
{% block javascripts %}
    {{ parent() }}

    <script src="{{asset('bundles/app/plugins/dagre-d3/d3.v3.min.js')}}" charset="utf-8"></script>
    <script src="{{asset('bundles/app/plugins/dagre-d3/dagre-d3.js')}}" charset="utf-8"></script>
    <script type="text/javascript">
        // Create the input graph
        var g = new dagreD3.graphlib.Graph()
          .setGraph({})
          .setDefaultEdgeLabel(function() { return {}; });

        // Here we"re setting nodeclass, which is used by our custom drawNodes function
        // below.
        {% for tema in temas %}
            g.setNode({{ tema.id }},  { labelType:"html", label: "<a href=\"{{ path('tema_show', { 'id': tema.id }) }}\">{{tema}}</a>", class: "type-TOP" });
        {% endfor %}
        
        g.nodes().forEach(function(v) {
          var node = g.node(v);
          // Round the corners of the nodes
          node.rx = node.ry = 5;
        });

        // Set up edges, no special attributes.
        {% for tema in temas %}
            {% for hijo in tema.hijos %}
               g.setEdge({{tema.id}}, {{hijo.id}});
            {% endfor %}
        {% endfor %}

        // Create the renderer
        var render = new dagreD3.render();

        // Set up an SVG group so that we can translate the final graph.
        var svg = d3.select("svg"),
            svgGroup = svg.append("g");

        // Run the renderer. This is what draws the final graph.
        render(d3.select("svg g"), g);

        // Center the graph
        var xCenterOffset = (svg.attr("width") - g.graph().width) / 2;
        svgGroup.attr("transform", "translate(" + xCenterOffset + ", 20)");
        svg.attr("height", g.graph().height + 40);
    </script>
    
    {% javascripts
        '@AppBundle/Resources/public/angularjs/loadModule.js'%}
        <script src="{{ asset_url }}"></script>
    {% endjavascripts %}
{% endblock %}