{% extends 'base.html.twig' %}

{% block body %}

    <!-- Content Header (Page header) -->
    <section class="content-header">
        <h1>Perfil</h1>
    </section>
    <!-- Main content -->
    <section class="content">
      <div class="box-body">
        {% if is_granted('ROLE_ESTUDIANTE') or is_granted('ROLE_PROFESOR') %}
        <div class="col-xs-12">
          <!-- AREA CHART -->
          <div class="box box-primary">
            <div class="box-header with-border">
              <h3 class="box-title">Progreso</h3>
            </div>
            <div class="box-body">
              <div class="chart">
                <canvas id="areaChart" style="height:250px"></canvas>
              </div>
            </div>
            <!-- /.box-body -->
          </div>
          <!-- /.box -->

         <!-- /.box -->

        </div>
        </div>
      {% endif %}
                        <!-- /.box-body -->
        <div class="nav-tabs-custom">
            <ul class="nav nav-tabs">
                <li class="active"><a href="#datos" data-toggle="tab">Datos</a></li>
                {#<li><a href="#settings" data-toggle="tab">Settings</a></li>#}
                {% if is_granted('ROLE_VERIFICADOR') and verify_form is defined %}
                <li style="float: right;background:rgba(34,34,34,0.5);">
                    {{ form_start(verify_form) }}
                    {{ form_errors(verify_form) }}
                    <div class="form-group ">
                    {{ form_widget(verify_form.estado)}}
                    </div>
                    <button type="submit" id="form_submit" name="form[submit]" class="btn btn-default">Guardar</button>            
                    {{ form_widget(verify_form._token) }}
                    {{ form_end(verify_form, {'render_rest': false}) }}
                </li>
                {% endif %}
            </ul>
            <div class="tab-content">
                <div class="active tab-pane row" id="datos">
                    <!-- Datos basicos e institucionales-->
                    <div class="box-primary col-md-4 col-xs-12">
                        <div class="box-body box-profile">
                            {#<img class="profile-user-img img-responsive img-circle" src="../../dist/img/user4-128x128.jpg" alt="User profile picture"> #}
                            <h3 class="profile-username text-center">{{estudiante.nombre}} {{estudiante.apellido}}</h3>
                            <p class="text-muted text-center">Estudiante</p>
                            <ul class="list-group list-group-unbordered">
                                <li class="list-group-item">
                                  <b>Usuario</b> <a class="pull-right" href="{{ path('user_show', { id: estudiante.usuario.id }) }}">{{ estudiante.usuario.username }}</a>
                                </li>
                                <li class="list-group-item">
                                  <b>Cédula</b> <a class="pull-right"> {{ estudiante.cedula }}</a>
                                </li>
                                <li class="list-group-item">
                                  <b>Genero</b> <a class="pull-right"> {% if estudiante.genero %}Masculino{% else %}Femenino{% endif %}</a>
                                </li>
                                <li class="list-group-item">
                                  <b>Credenciales</b> <a class="pull-right" href="{{ asset('uploads/credenciales/' ~ estudiante.credencial ) }}" target="_blank" > Abrir archivo</a>
                                </li>
                                <li class="list-group-item">
                                    <b>Ha sido verificado</b> <span class="pull-right label label-{% if estudiante.estado == 2 %}danger{% elseif estudiante.estado == 1 %}warning{% else %}success{% endif %}">{{ CONST['ESTADOS'][estudiante.estado] }}</span>
                                </li>
                                {#
                                <li class="list-group-item">
                                  <b>Último Acceso</b> <a class="pull-right">{% if estudiante.usuario.lastLogin %}{{ estudiante.usuario.lastLogin|date('Y-m-d H:i') }}{% else %}nunca{% endif %}</a>
                                </li>
                                <li class="list-group-item">
                                  <b>Friends</b> <a class="pull-right">13,287</a>
                                </li>
                                #}
                            </ul>
                            <h3 class="profile-username text-center">Institucionales</h3>
                            <p class="text-muted text-center">Plantel</p>
                            <ul class="list-group list-group-unbordered">
                                <li class="list-group-item">
                                  <b>Tipo</b> <a class="pull-right">{{ CONST['TIPOS_PLANTEL'][estudiante.tipoPlantel] }}</a>
                                </li>
                                <li class="list-group-item">
                                  <b>Gestión</b> <a class="pull-right">{{ CONST['GESTIONES_PLANTEL'][estudiante.gestionPlantel] }}</a>
                                </li>
                            </ul>
                        </div><!-- /.datos basicos -->
                    </div><!-- /.box -->
                    <!-- Notas matematica -->
                    <div class="box-primary col-md-3  col-xs-12">
                        <div class="box-body">
                            <h3 class="profile-username text-center">Academicos</h3>
                            <p class="text-muted text-center">Notas Matematicas</p>
                            <ul class="list-group list-group-unbordered">
                                <li class="list-group-item">
                                  <b>1er Año</b> <a class="pull-right">{{ estudiante.notaPrimero }}</a>
                                </li>
                                <li class="list-group-item">
                                  <b>2do Año</b> <a class="pull-right">{{ estudiante.notaSegundo }}</a>
                                </li>
                                <li class="list-group-item">
                                  <b>3er Año</b> <a class="pull-right">{{ estudiante.notaTercero }}</a>
                                </li>
                                <li class="list-group-item">
                                  <b>4to Año</b> <a class="pull-right">{{ estudiante.notaCuarto }}</a>
                                </li>
                            </ul>
                            <p class="text-muted text-center">Promedio</p>
                            <ul class="list-group list-group-unbordered">
                                <li class="list-group-item">
                                  <b>Total Cursadas</b> <a class="pull-right">{{ estudiante.cantMaterias }}</a>
                                </li>
                                <li class="list-group-item">
                                  <b>Promedio</b> <a class="pull-right">{{ estudiante.promedio }}</a>
                                </li>
                            </ul>
                        </div><!-- /.box-body -->
                    </div><!-- /.notas matematica -->
                    <!-- Opsu y socio-econimicos-->
                    <div class="box-primary col-md-4  col-xs-12">
                        <div class="box-body">
                            <h3 class="profile-username text-center">Admisión</h3>
                            <ul class="list-group list-group-unbordered">
                                <li class="list-group-item">
                                  <b>OPSU</b> <a class="pull-right">{% if estudiante.esAsignadoOPSU %}Sí,{% else %}No{% endif %} asignado.</a>
                                </li>
                                <li class="list-group-item">
                                  <b>1era Opción</b> <a class="pull-right">{{ CONST['CARRERAS'][estudiante.primeraOpcion] }}</a>
                                </li>
                                <li class="list-group-item">
                                  <b>2da Opción</b> <a class="pull-right">{{ CONST['CARRERAS'][estudiante.segundaOpcion] }}</a>
                                </li>
                            </ul>
                        </div><!-- /.box-body -->
                    </div><!-- /.opsu y socio-economicos-->
                    <!-- Socio-economicos -->
                    <div class="box-primary col-md-4  col-xs-12">
                        <div class="box-body">
                            <h3 class="profile-username text-center">Socio-economicos</h3>
                            <ul class="list-group list-group-unbordered">
                                <li class="list-group-item">
                                  <b>Nivel</b> <a class="pull-right">{{ CONST['NIVELES_SOCIOECONOMICOS'][estudiante.nivelSocioeconomico] }}</a>
                                </li>
                                <li class="list-group-item">
                                  <b>Gestión</b> <a class="pull-right">{{ CONST['NIVELES_EDUCATIVOS'][estudiante.nivelEstudioPadres] }}</a>
                                </li>
                            </ul>
                        </div><!-- /.box-body -->
                    </div><!-- /.socio-economicos -->
                </div><!-- /.tab-pane datos-->
                <div class="tab-pane" id="settings">
                   
                </div><!-- /.tab-pane settings-->
            </div><!-- /.tab-content -->
        </div><!-- /.nav-tabs-custom -->
        <div>
            <a class="btn btn-default btn-flat" href="{{ path('estudiante_index') }}"><i class="fa fa-arrow-left"></i>&nbsp;ir a lista</a>
            {% if is_granted('ROLE_ESTUDIANTE') and estudiante.estado == 2 %}
            <a class="btn btn-warning btn-flat pull-right" href="{{ path('estudiante_edit', { 'id': estudiante.id }) }}"><i class="fa fa-edit"></i>&nbsp;Editar</a>
            {% endif %}
        </div>
    </section><!-- /.content -->

{% endblock %}
{% block javascripts %}
    {{ parent() }}

    <script src="{{ asset('bundles/app/plugins/jQuery/jQuery-2.2.0.min.js') }}" type="text/javascript"></script>
    <!-- ChartJS 1.0.1 -->
    <script src="{{ asset('bundles/app/plugins/chartjs/Chart.min.js') }}" type="text/javascript"></script>
<script>
  $(function () {
    /* ChartJS
     * -------
     * Here we will create a few charts using ChartJS
     */

    //--------------
    //- AREA CHART -
    //--------------

    // Get context with jQuery - using jQuery's .get() method.
    var areaChartCanvas = $("#areaChart").get(0).getContext("2d");
    // This will get the first returned node in the jQuery collection.
    var areaChart = new Chart(areaChartCanvas);

    var areaChartData = {
        labels: [
        {% for item in estudiante.practicas %}
            "{{ item.fin|date('m-d H:i') }}",
        {% endfor %}
      ],
      datasets: [
        {
          label: "Practicas",
          fillColor: "rgba(60,141,188,0.9)",
          strokeColor: "rgba(60,141,188,0.8)",
          pointColor: "#3b8bba",
          pointStrokeColor: "rgba(60,141,188,1)",
          pointHighlightFill: "#fff",
          pointHighlightStroke: "rgba(60,141,188,1)",
          data: [
          {% for item in estudiante.practicas %}
            {{ item.calificacion }},
            {% endfor %}
        ]
        }
      ]
    };

    var areaChartOptions = {
      //Boolean - If we should show the scale at all
      showScale: true,
      //Boolean - Whether grid lines are shown across the chart
      scaleShowGridLines: false,
      //String - Colour of the grid lines
      scaleGridLineColor: "rgba(0,0,0,.05)",
      //Number - Width of the grid lines
      scaleGridLineWidth: 1,
      //Boolean - Whether to show horizontal lines (except X axis)
      scaleShowHorizontalLines: true,
      //Boolean - Whether to show vertical lines (except Y axis)
      scaleShowVerticalLines: true,
      //Boolean - Whether the line is curved between points
      bezierCurve: true,
      //Number - Tension of the bezier curve between points
      bezierCurveTension: 0.3,
      //Boolean - Whether to show a dot for each point
      pointDot: false,
      //Number - Radius of each point dot in pixels
      pointDotRadius: 4,
      //Number - Pixel width of point dot stroke
      pointDotStrokeWidth: 1,
      //Number - amount extra to add to the radius to cater for hit detection outside the drawn point
      pointHitDetectionRadius: 20,
      //Boolean - Whether to show a stroke for datasets
      datasetStroke: true,
      //Number - Pixel width of dataset stroke
      datasetStrokeWidth: 2,
      //Boolean - Whether to fill the dataset with a color
      datasetFill: true,
      //String - A legend template
      legendTemplate: "<ul class=\"<%=name.toLowerCase()%>-legend\"><% for (var i=0; i<datasets.length; i++){ %><li><span style=\"background-color:<%=datasets[i].lineColor%>\"></span><%if(datasets[i].label){ %><%=datasets[i].label%><% }%></li><% }%></ul>",
      //Boolean - whether to maintain the starting aspect ratio or not when responsive, if set to false, will take up entire container
      maintainAspectRatio: true,
      //Boolean - whether to make the chart responsive to window resizing
      responsive: true
    };

    //Create the line chart
    areaChart.Line(areaChartData, areaChartOptions);

    //-------------
    //- LINE CHART -
    //--------------
    var lineChartCanvas = $("#lineChart").get(0).getContext("2d");
    var lineChart = new Chart(lineChartCanvas);
    var lineChartOptions = areaChartOptions;
    lineChartOptions.datasetFill = false;
    lineChart.Line(areaChartData, lineChartOptions); 

  });
</script>
    {% javascripts
        '@AppBundle/Resources/public/angularjs/loadModule.js'%}
        <script src="{{ asset_url }}"></script>
    {% endjavascripts %}

{% endblock %}